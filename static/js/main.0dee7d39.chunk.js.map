{"version":3,"sources":["robots.js","components/Card/index.js","components/CardList/index.js","App.js","reportWebVitals.js","index.js"],"names":["robots","id","name","username","email","Card","data","className","src","alt","width","CardList","map","robot","App","useState","field","setField","isFixed","setIsFixed","setData","inputRef","useRef","useEffect","window","addEventListener","event","target","scrollingElement","scrollTop","current","offsetTop","type","value","onChange","filter","toLowerCase","includes","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAaA,EAAS,CACpB,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,eCxDI,SAASC,EAAT,GAAoD,IAAD,IAAnCC,KAAQH,EAA2B,EAA3BA,SAAUD,EAAiB,EAAjBA,KAAME,EAAW,EAAXA,MACrD,OACE,qBAAKG,UAAU,iBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBACEC,IAAG,+BAA0BL,GAC7BM,IAAKN,EACLO,MAAO,MAET,oBAAIH,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,gBAAd,SAA+BH,S,MCTxB,SAASO,EAAT,GAA6B,IAATL,EAAQ,EAARA,KACjC,OACE,qBAAKC,UAAU,qBAAf,SACGD,EAAKM,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CAAMP,KAAMO,GAAYA,EAAMZ,SCiCvBa,MAtCf,WACE,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,mBAASf,GAAjC,mBAAOM,EAAP,KAAac,EAAb,KACMC,EAAWC,iBAAO,MAmBxB,OATAC,qBAAU,WAMRC,OAAOC,iBAAiB,UALJ,SAACC,GAAW,IAAD,EAC7BA,EAAMC,OAAOC,iBAAiBC,YAA9B,OAA2CR,QAA3C,IAA2CA,GAA3C,UAA2CA,EAAUS,eAArD,aAA2C,EAAmBC,WAC1DZ,GAAW,GACXA,GAAW,QAGhB,IAGD,sBAAKZ,UAAU,YAAf,UACE,6CACA,uBACEyB,KAAK,OACLC,MAAOjB,EACPkB,SAvBc,SAACR,GACnBT,EAASS,EAAMC,OAAOM,OACtBb,EACEpB,EAAOmC,QAAO,SAACtB,GAAD,OACZA,EAAMX,KAAKkC,cAAcC,SAASX,EAAMC,OAAOM,MAAMG,oBAoBrDE,IAAKjB,EACLd,UAAWW,EAAU,QAAU,KAEjC,cAAC,EAAD,CAAUZ,KAAMA,QCxBPiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0dee7d39.chunk.js","sourcesContent":["export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nexport default function Card({ data: { username, name, email } }) {\r\n  return (\r\n    <div className=\"container-card\">\r\n      <div className=\"card\">\r\n        <img\r\n          src={`https://robohash.org/${username}`}\r\n          alt={username}\r\n          width={200}\r\n        />\r\n        <h3 className=\"title-card\">{name}</h3>\r\n        <h6 className=\"subtitle-card\">{email}</h6>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"../Card\";\r\nimport \"./index.css\";\r\n\r\nexport default function CardList({ data }) {\r\n  return (\r\n    <div className=\"container-cardlist\">\r\n      {data.map((robot) => (\r\n        <Card data={robot} key={robot.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { robots } from \"./robots\";\nimport CardList from \"./components/CardList\";\nimport { useEffect, useRef, useState } from \"react\";\nfunction App() {\n  const [field, setField] = useState();\n  const [isFixed, setIsFixed] = useState(false);\n  const [data, setData] = useState(robots);\n  const inputRef = useRef(null);\n\n  const inputChange = (event) => {\n    setField(event.target.value);\n    setData(\n      robots.filter((robot) =>\n        robot.name.toLowerCase().includes(event.target.value.toLowerCase())\n      )\n    );\n  };\n  useEffect(() => {\n    const scrollInput = (event) => {\n      event.target.scrollingElement.scrollTop >= inputRef?.current?.offsetTop\n        ? setIsFixed(true)\n        : setIsFixed(false);\n    };\n    window.addEventListener(\"scroll\", scrollInput);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>RoboFriends</h1>\n      <input\n        type=\"text\"\n        value={field}\n        onChange={inputChange}\n        ref={inputRef}\n        className={isFixed ? \"fixed\" : \"\"}\n      />\n      <CardList data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}